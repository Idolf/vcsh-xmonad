#!/usr/bin/env python
import os, sys, subprocess

def get_passwords():
    prefix = os.environ.get('PASSWORD_STORE_DIR') or \
             os.path.expanduser("~/.password-store")
    for root, dirs, files in os.walk(prefix):
        for fname in files:
            if fname.endswith('.gpg'):
                fullpath = os.path.join(root, fname)
                relpath = os.path.relpath(fullpath, prefix)
                yield relpath[:-4]

def run_rofi(options):
    p = subprocess.Popen(
        ["rofi", "-dmenu", "-p", ""],
        stdin = subprocess.PIPE,
        stdout = subprocess.PIPE
    )
    out, _ = p.communicate('\n'.join(sorted(options)))
    out = out.strip()
    if not out:
        sys.exit(0)
    else:
        return out.strip()

def run_pass(password):
    return subprocess.check_output(['pass', 'show', password]).split('\n')[0]

def run_xdotool_string(string):
    subprocess.check_call([
        'xdotool', 'type', '--clearmodifiers', '--', string
    ])

def run_xdotool_key(key):
    subprocess.check_call(['xdotool', 'key', '--clearmodifiers', key])

def get_passwords_with_users():
    passwords = set()
    users = set()
    for fname in get_passwords():
        if fname.endswith('/user'):
            users.add(fname[:-5])
        else:
            passwords.add(fname)
    return users & passwords

def main():
    if len(sys.argv) == 2 and sys.argv[1] == 'users':
        choice   = run_rofi(get_passwords_with_users())
        user     = run_pass(choice + '/user')
        password = run_pass(choice)
        run_xdotool_string(user + '\t' + password)
        # xdotool supports sending a newline,
        # but this is not good enough for e.g. facebook
        run_xdotool_key('Return')
    else:
        choice = run_rofi(get_passwords())
        password = run_pass(choice)
        run_xdotool_string(password)

if __name__ == '__main__': main()
